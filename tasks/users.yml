---
- name: Ensure PostgreSQL users are configured correctly.
  community.postgresql.postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    encrypted: "{{ item.encrypted | default(omit) }}"
    role_attr_flags: "{{ item.role_attr_flags | default(omit) }}"
    db: "{{ item.db | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    fail_on_user: "{{ item.fail_on_user | d(omit) }}"
    expires: "{{ item.expires | d(omit) }}"
    no_password_changes: "{{ item.no_password_changes | d(omit) }}"
    conn_limit: "{{ item.conn_limit | d(omit) }}"
    comment: "{{ item.comment | d(omit) }}"
    trust_input: "{{ item.trust_input | d(omit) }}"
    # Connection options
    ca_cert: "{{ postgresql_conn_vars.ca_cert | d(omit, true) }}"
    connect_params: "{{ postgresql_conn_vars.connect_params | d(omit, true) }}"
    login_host: "{{ postgresql_conn_vars.login_host | d(omit, true) }}"
    login_password: "{{ postgresql_conn_vars.login_password | d(omit, true) }}"
    login_unix_socket: "{{ postgresql_conn_vars.login_unix_socket | d(omit, true) }}"
    login_user: "{{ postgresql_conn_vars.login_user | d(omit, true) }}"
    login_port: "{{ postgresql_conn_vars.login_port | d(omit, true) }}"
    session_role: "{{ postgresql_conn_vars.session_role | d(omit, true) }}"
    ssl_cert: "{{ postgresql_conn_vars.ssl_cert | d(omit, true) }}"
    ssl_key: "{{ postgresql_conn_vars.ssl_key | d(omit, true) }}"
    ssl_mode: "{{ postgresql_conn_vars.ssl_mode | d(omit, true) }}"
  loop: "{{ postgresql_users }}"
  loop_control:
    label: "{{ item.name }}"
  no_log: "{{ postgresql_users_no_log }}"
  become: true
  become_user: "{{ postgresql_user }}"
  environment:
    PGOPTIONS: "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"
  vars:
    ansible_ssh_pipelining: true
    ansible_python_interpreter: "{{ _postgresql_ansible_python_interpreter }}"


- name: Manage PostgreSQL memberships.
  community.postgresql.postgresql_membership:
    groups: "{{ item.groups }}"
    target_roles: "{{ item.target_roles }}"
    state: "{{ item.state | default('present') }}"
    db: "{{ item.db | default(omit) }}"
    fail_on_role: "{{ item.fail_on_user | d(omit) }}"
    trust_input: "{{ item.trust_input | d(omit) }}"
    # connection options
    ca_cert: "{{ postgresql_conn_vars.ca_cert | d(omit, true) }}"
    connect_params: "{{ postgresql_conn_vars.connect_params | d(omit, true) }}"
    login_host: "{{ postgresql_conn_vars.login_host | d(omit, true) }}"
    login_password: "{{ postgresql_conn_vars.login_password | d(omit, true) }}"
    login_unix_socket: "{{ postgresql_conn_vars.login_unix_socket | d(omit, true) }}"
    login_user: "{{ postgresql_conn_vars.login_user | d(omit, true) }}"
    login_port: "{{ postgresql_conn_vars.login_port | d(omit, true) }}"
    session_role: "{{ postgresql_conn_vars.session_role | d(omit, true) }}"
    ssl_cert: "{{ postgresql_conn_vars.ssl_cert | d(omit, true) }}"
    ssl_key: "{{ postgresql_conn_vars.ssl_key | d(omit, true) }}"
    ssl_mode: "{{ postgresql_conn_vars.ssl_mode | d(omit, true) }}"
  loop: "{{ postgresql_memberships }}"
  no_log: "{{ postgresql_users_no_log }}"
  become: true
  become_user: "{{ postgresql_user }}"
  vars:
    ansible_ssh_pipelining: true
    ansible_python_interpreter: "{{ _postgresql_ansible_python_interpreter }}"
