---
- name: Show variables
  ansible.builtin.debug:
    var: v
  vars:
    v:
      ansible_distribution: "{{ ansible_distribution }}"
      ansible_os_family: "{{ ansible_os_family }}"
      ansible_distribution_version: "{{ ansible_distribution_version }}"
      ansible_distribution_major_version: "{{ ansible_distribution_major_version }}"
      ansible_distribution_release: "{{ ansible_distribution_release }}"

- name: Import tasks (debian/install.yml)
  ansible.builtin.import_tasks: debian/install.yml
  when: ansible_os_family | lower == "debian"

- name: Import tasks (redhat/install.yml)
  ansible.builtin.import_tasks: redhat/install.yml
  when: ansible_os_family | lower == "redhat"

- name: Include {{ ansible_pkg_mgr + '/install.yml' }}
  ansible.builtin.include_tasks: "{{ item }}"
  loop: "{{ query('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_pkg_mgr }}/install.yml"
      skip: true

- name: Retrieve postgresql user's info
  ansible.builtin.getent:
    database: passwd
    key: "{{ postgresql_user }}"

- name: Set fact for postgresql user's home directory
  ansible.builtin.set_fact:
    _postgresql_user_home_dir: "{{ ansible_facts.getent_passwd[postgresql_user][4] }}"

- name: Create a dedicated virtual env for postgresql related libraries
  ansible.builtin.pip:
    name: pip
    extra_args: --upgrade
    virtualenv: "{{ _postgresql_virtualenv_path }}"
    virtualenv_command: python3 -m venv
  become_user: "{{ postgresql_user }}"
  when: not ansible_check_mode
  environment: "{{ _postgresql_general_proxy_env | ansible.builtin.combine({'PATH': _postgresql_pythonized_path}) }}"

# Errors while installing this dependency on redhat system. Used the link below to provide a solution
# https://bobcares.com/blog/error-pg_config-executable-not-found/
# https://linuxhint.com/pg-config-executable-not-found/
- name: Install pip dependencies
  ansible.builtin.pip:
    name: "{{ _postgresql_dependencies_pip_packages }}"
    virtualenv: "{{ _postgresql_virtualenv_path }}"
  become_user: "{{ postgresql_user }}"
  environment: "{{ _postgresql_general_proxy_env | ansible.builtin.combine({'PATH': _postgresql_pythonized_path}) }}"
