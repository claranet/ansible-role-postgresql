---
- name: Gather OS specific variables
  ansible.builtin.include_vars: "{{ loop_vars }}"
  loop: "{{ query('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distro | lower }}-{{ ansible_distro_version }}.yaml"
        - "{{ ansible_distro | lower }}-{{ ansible_distro_release }}.yaml"
        - "{{ ansible_distro | lower }}-{{ ansible_distro_major_version }}.yaml"
        - "{{ ansible_distro | lower }}.yaml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distro_major_version }}-family.yaml"
        - "{{ ansible_os_family | lower }}-family.yaml"
        - "{{ ansible_system | lower }}.yaml"
      paths:
        - "vars"
      skip: true
  loop_control:
    loop_var: loop_vars

- name: Define postgresql_log_dir.
  ansible.builtin.set_fact:
    # postgresql_global_config_options is an array but its keys are unique, so it can be converted to dict,
    # to easily get the value under the 'log_directory' key
    postgresql_log_dir: "{{ ((postgresql_global_config_options + postgresql_global_config_options_extra) | items2dict(key_name='option', value_name='value')).log_directory }}"

- name: Define postgresql_effective_log_dir, if postgresql_log_dir is absolute
  ansible.builtin.set_fact:
    postgresql_effective_log_dir: '{{ postgresql_log_dir }}'
  when: postgresql_log_dir is match("/")

- name: Define postgresql_effective_log_dir, if postgresql_log_dir is relative
  ansible.builtin.set_fact:
    postgresql_effective_log_dir: '{{ _postgresql_data_dir }}/{{ postgresql_log_dir }}'
  when: postgresql_log_dir is not match("/")

- name: "Build proxy environnement to enable/disable proxy use for general internet usage and package manager actions"
  ansible.builtin.set_fact:
    _postgresql_general_proxy_env:
      http_proxy: "{{ postgresql_http_general_proxy | d(omit, true) }}"
      https_proxy: "{{ postgresql_https_general_proxy | d(omit, true) }}"
    _postgresql_pkg_proxy_env:
      http_proxy: "{{ postgresql_http_pkg_proxy | d(omit, true) }}"
      https_proxy: "{{ postgresql_https_pkg_proxy | d(omit, true) }}"

- name: Add relication hba rules
  ansible.builtin.set_fact:
    _postgresql_replication_hba_entries: "{{ _postgresql_replication_hba_entries | d([]) +
      [{'contype': 'host', 'databases': 'replication', 'users': postgresql_replication_user, 'address': item, 'method': postgresql_replication_auth_method}]
      }}"
  loop: "{{ postgresql_replication_replica_addresses }}"
  when:
    - postgresql_replication
    - postgresql_replication_hba_entries | d([], true) | length == 0
